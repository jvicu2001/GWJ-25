[gd_resource type="VisualShader" load_steps=21 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeVectorInterp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.3, 0.3, 0.3 ) ]

[sub_resource type="VisualShaderNodeColorConstant" id=3]
constant = Color( 0.121569, 0.505882, 0.956863, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.5, 0 ) ]

[sub_resource type="OpenSimplexNoise" id=6]
seed = 33

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=10]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[sub_resource type="VisualShaderNodeVectorOp" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 60, 60, 60 ) ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 8.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=15]
output_port_for_preview = 0
source = 1

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = SubResource( 7 )

[sub_resource type="VisualShaderNodeInput" id=20]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_8;
uniform sampler2D tex_frg_15;



void vertex() {
// Output:0

}

void fragment() {
// Input:9
	vec3 n_out9p0 = vec3(UV, 0.0);

// Input:18
	float n_out18p0 = TIME;

// ScalarOp:21
	float n_in21p1 = 8.00000;
	float n_out21p0 = n_out18p0 / n_in21p1;

// VectorOp:7
	vec3 n_in7p1 = vec3(0.20000, 0.50000, 0.00000);
	vec3 n_out7p0 = vec3(n_out21p0) + n_in7p1;

// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + n_out7p0;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, n_out10p0.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// Input:16
	vec3 n_out16p0 = vec3(UV, 0.0);

// VectorOp:14
	vec3 n_in14p1 = vec3(0.20000, 0.50000, 0.00000);
	vec3 n_out14p0 = vec3(n_out21p0) + n_in14p1;

// VectorOp:17
	vec3 n_out17p0 = n_out16p0 + n_out14p0;

// Texture:15
	vec4 tex_frg_15_read = texture(tex_frg_15, n_out17p0.xy);
	vec3 n_out15p0 = tex_frg_15_read.rgb;
	float n_out15p1 = tex_frg_15_read.a;

// VectorOp:19
	vec3 n_out19p0 = n_out8p0 + n_out15p0;

// VectorOp:20
	vec3 n_in20p1 = vec3(60.00000, 60.00000, 60.00000);
	vec3 n_out20p0 = n_out19p0 / n_in20p1;

// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// VectorOp:13
	vec3 n_out13p0 = n_out20p0 + n_out4p0;

// Scalar:5
	float n_out5p0 = 0.000000;

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out13p0.xy, n_out5p0);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Color:12
	vec3 n_out12p0 = vec3(0.121569, 0.505882, 0.956863);
	float n_out12p1 = 1.000000;

// VectorMix:11
	vec3 n_in11p2 = vec3(0.30000, 0.30000, 0.30000);
	vec3 n_out11p0 = mix(n_out3p0, n_out12p0, n_in11p2);

// Output:0
	COLOR.rgb = n_out11p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -977.333, -745 )
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource( 15 )
nodes/fragment/3/position = Vector2( -420, 220 )
nodes/fragment/4/node = SubResource( 16 )
nodes/fragment/4/position = Vector2( -860, 80 )
nodes/fragment/5/node = SubResource( 17 )
nodes/fragment/5/position = Vector2( -740, 280 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( -1160, -580 )
nodes/fragment/8/node = SubResource( 19 )
nodes/fragment/8/position = Vector2( -800, -640 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( -1160, -640 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -1000, -640 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -200, 140 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -360, 100 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -620, 20 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -1160, -340 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -800, -400 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -1160, -400 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( -1000, -400 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -1500, -500 )
nodes/fragment/19/node = SubResource( 12 )
nodes/fragment/19/position = Vector2( -480, -460 )
nodes/fragment/20/node = SubResource( 13 )
nodes/fragment/20/position = Vector2( -390.937, -254.917 )
nodes/fragment/21/node = SubResource( 14 )
nodes/fragment/21/position = Vector2( -1495.33, -436.1 )
nodes/fragment/connections = PoolIntArray( 9, 0, 10, 0, 7, 0, 10, 1, 10, 0, 8, 0, 3, 0, 11, 0, 12, 0, 11, 1, 11, 0, 0, 0, 4, 0, 13, 1, 16, 0, 17, 0, 14, 0, 17, 1, 17, 0, 15, 0, 15, 0, 19, 1, 8, 0, 19, 0, 19, 0, 20, 0, 20, 0, 13, 0, 18, 0, 21, 0, 21, 0, 7, 0, 21, 0, 14, 0, 5, 0, 3, 1, 13, 0, 3, 0 )
